version: '3.8'
services:
  backend:
    image: "backend"
    build:
      context: ./backend
    volumes:
      - ./backend/:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/todo_db
    expose:
      - "8000"
    command: >
      sh -c "./wait-for-it.sh db:5432 --
      alembic -c /app/app/models/alembic.ini upgrade head &&
      gunicorn -k uvicorn.workers.UvicornWorker -c gunicorn_conf.py app.main:app"
    depends_on:
      - db
      - redis
    networks:
      - internal

  frontend:
    image: "frontend"
    build:
      context: ./frontend
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - internal
    # platform: linux/amd64 MacOS M processor compatibility

  redis:
    image: redis:7
    expose:
      - "6379"
    networks:
      - internal

  db:
    image: postgres:16-alpine
    restart: "no"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-db}
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - internal

  nginx:
    image: nginx:latest
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - internal

volumes:
  pg_data:

networks:
  internal:
    driver: bridge
